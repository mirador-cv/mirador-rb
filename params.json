{"name":"Mirador-rb","tagline":"Ruby client for Mirador (http://mirador.im) API","body":"# Mirador\r\n\r\nA simple Ruby client for the [mirador](http://mirador.im) Image moderation API.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'mirador'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install mirador\r\n\r\n## Usage\r\n\r\nThere are really two basic methods available on the API. To get started, you need an API key, available from [mirador.im/join](http://mirador.im/join). If you have problems with the API or this client, please contact support@mirador.im.\r\n\r\n### `Mirador::Client.classify_files(files) -> [Mirador::Result]`\r\n\r\nThis method takes a list of filenames and returns a list of `Mirador::Result` objects. See example:\r\n\r\n```ruby\r\nrequire 'mirador'\r\n\r\nmc = Mirador::Client.new('your_key_here')\r\nmc.classify_files('bathing-suit.jpg', 'nsfw-user-upload.png').each do |result|\r\n  puts \"name: #{ result.name }, safe: #{ result.safe }, value: #{ result.value }\"\r\nend\r\n\r\n```\r\n\r\n### `Mirdor::Client.classify_urls(urls) -> [Mirador::Result]`\r\n\r\nThis method takes a list of urls and returns `Mirador::Result` objects. Identical to `classify_files`:\r\n\r\n```ruby\r\nrequire 'mirador'\r\n\r\nmc.classify_urls('http://possibly-nsfw.com/cool.png', 'http://mysite.net/image/bad-picture.jpg').each do |result|\r\n  puts \"name: #{ result.name }, safe: #{ result.safe }, value: #{ result.value }\"\r\nend\r\n\r\n```\r\n\r\n### `Mirador::Result`\r\n\r\nThe `Mirador::Result` class has 3 fields:\r\n\r\n* `Result.name` - `string`, the filename or url for this request\r\n* `Result.safe` - `bool`, a boolean indicating whether image contains adult content.\r\n* `Result.value` - `float`, a number 0.0 - 1.0 indicating confidence of judgement\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Support\r\n\r\nPlease submit and bugs as issues, and don't hesitate to contact support@mirador.im with questions or issues.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}